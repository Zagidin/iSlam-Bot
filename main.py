import text_file

from bot.registar_bot import dp
from bot.start_bot import starts_bot
from aiogram import types
from keyboards.otvet_bot import otvet_botu
from keyboards.all_dua import all_dua
from keyboards.oplata import oplata
from inlanekey.helpproect import proect_help


@dp.message_handler(commands=['start'])
async def start(message: types.Message):
    await message.answer(
        f"<b>–ê—Å-—Å–∞–ª—è–º—É –∞–ª–µ–π–∫—É–º "
        f"–≤–∞-—Ä–∞—Ö–º–∞—Ç—É-–õ–ª–∞ÃÅ—Ö–∏ –≤–∞-–±–∞—Ä–∞–∫–∞ÃÅ—Ç—É—Ö @{message.from_user.username}ü§ö</b>",
        parse_mode='HTML',
        reply_markup=otvet_botu
    )


@dp.message_handler(commands=['help'])
async def help(message: types.Message):
    await message.answer(
        f"–î—É–∞ ‚Äî —ç—Ç–æ –ª–∏—á–Ω–∞—è –º–æ–ª—å–±–∞ –º—É—Å—É–ª—å–º–∞–Ω–∏–Ω–∞ –Ω–∞ —Ä–æ–¥–Ω–æ–º —è–∑—ã–∫–µ, –æ–±—Ä–∞—â–µ–Ω–∏–µ –∫ –ê–ª–ª–∞—Ö—É "
        f"–≤ –∏—Å–ª–∞–º–µ. –û–¥–Ω–∞ –∏–∑ —Ä–∞–∑–Ω–æ–≤–∏–¥–Ω–æ—Å—Ç–µ–π –ø–æ–∫–ª–æ–Ω–µ–Ω–∏—è.\n–î—É–∞ –ø—Ä–æ–∏–∑–Ω–æ—Å—è—Ç –≤ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö "
        f"–∂–∏—Ç–µ–π—Å–∫–∏—Ö —Å–∏—Ç—É–∞—Ü–∏—è—Ö. –û–±—ã—á–Ω–æ –º—É—Å—É–ª—å–º–∞–Ω–µ –ø—Ä–æ—Å—è—Ç –ê–ª–ª–∞—Ö–∞ –æ –ø–æ–º–æ—â–∏, –Ω–∞—á–∏–Ω–∞—è "
        f"–∫–∞–∫–æ–µ-—Ç–æ –¥–µ–ª–æ.\n\n<b>–ü—Ä–∏ —á—Ç–µ–Ω–∏–∏ –¥—É–∞ –º—É—Å—É–ª—å–º–∞–Ω–µ –æ–±—Ä–∞—â–∞—é—Ç—Å—è –≤ —Å—Ç–æ—Ä–æ–Ω—É –ú–µ–∫–∫–∏ (–∫–∏–±–ª—ã), "
        f"–ø–æ–¥–Ω–∏–º–∞—é—Ç —Ä—É–∫–∏ –Ω–∞ —É—Ä–æ–≤–Ω–µ –ø–ª–µ—á –ª–∞–¥–æ–Ω—è–º–∏ –≤–≤–µ—Ä—Ö –∏ –ø–æ–Ω–∏–∂–µ–Ω–Ω—ã–º –≥–æ–ª–æ—Å–æ–º –ø—Ä–æ–∏–∑–Ω–æ—Å—è—Ç "
        f"–º–æ–ª—å–±—ã –Ω–∞ –∞—Ä–∞–±—Å–∫–æ–º –∏–ª–∏ –¥—Ä—É–≥–æ–º, –ø–æ–Ω—è—Ç–Ω–æ–º –æ–±—Ä–∞—â–∞—é—â–µ–º—É—Å—è —è–∑—ã–∫–µ.</b>\n\n",
        parse_mode='HTML',
        reply_markup=proect_help
    )


@dp.message_handler(lambda message: types.Message)
async def otvet(message: types.Message):
    if message.text == '–í–∞-–∞–ª–µ–π–∫—É–º –∞—Å-—Å–∞–ª—èÃÅ–º –≤–∞-—Ä–∞—Ö–º–∞—Ç—É-–õ–ª–∞ÃÅ—Ö–∏ –≤–∞-–±–∞—Ä–∞–∫–∞ÃÅ—Ç—É—Ö üëã':
        await message.answer(
            "–í—ã–±–µ—Ä–∏ –î—É–∞",
            reply_markup=all_dua
        )
    elif message.text == '–î—É–∞ –ø—Ä–∏ –í—Ö–æ–¥–µ üè†':
        file = open('ALL_DUA/Entrance_home.pdf', 'rb')
        await message.answer_document(file)
        await message.answer(
            text_file.entrance_home,
            parse_mode='HTML'
        )
    elif message.text == '–î—É–∞ –ø–µ—Ä–µ–¥ –ï–¥–æ–π üçΩÔ∏è':
        file = open('ALL_DUA/Before_Eating.pdf', 'rb')
        await message.answer_document(file)
        await message.answer(
            text_file.before_eating,
            parse_mode='HTML'
        )
    elif message.text == '–î—É–∞ –ø–æ—Å–ª–µ –ï–¥—ã ü•£':
        file = open('ALL_DUA/After_Eating.pdf', 'rb')
        await message.answer_document(file)
        await message.answer(
            text_file.after_eating,
            parse_mode='HTML'
        )
    elif message.text == '–î—É–∞ –ø—Ä–∏ –í—ã—Ö–æ–¥–µ –∏–∑ üè†':
        file = open('ALL_DUA/Exit_home.pdf', 'rb')
        await message.answer_document(file)
        await message.answer(
            text_file.exit_home,
            parse_mode='HTML'
        )
    elif message.text == "50 ‚ÇΩ" or message.text == "100 ‚ÇΩ" or message.text == "150 ‚ÇΩ":
        await message.answer("–ü–æ–∫–∞ –≤ –†–∞–∑—Ä–∞–±–æ—Ç–∫–µ!", reply_markup=all_dua)
    else:
        await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –î—É–∞", reply_markup=all_dua)


@dp.callback_query_handler()
async def callback_send_user(callback):
    if callback.data == 'proect_help':

        await callback.message.answer(
            f"iSlam Dua - –ø–æ–ª–µ–∑–Ω—ã–π –ò—Å–ª–∞–º—Å–∫–∏–π –±–æ—Ç, "
            f"–∫–æ—Ç–æ—Ä—ã–π –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ä–µ–∫–ª–∞–º—ã.\n\n"
            f"–í—ã –º–æ–∂–µ—Ç–µ –ø–æ–º–æ—á—å –ø—Ä–æ–µ–∫—Ç—É, —Å–¥–µ–ª–∞–≤ –¥–æ–±—Ä–æ–≤–æ–ª—å–Ω–æ–µ –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏–µ.",
            reply_markup=oplata
        )

if __name__ == "__main__":
    starts_bot()
