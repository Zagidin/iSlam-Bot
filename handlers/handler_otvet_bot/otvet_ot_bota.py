import text_file

from aiogram import types
from bot.registar_bot import dp
from keyboards.all_dua import all_dua
from keyboards.oplata import summa


@dp.message_handler(lambda message: types.Message)
async def otvet(message: types.Message):
    if message.text == '–í–∞-–∞–ª–µ–π–∫—É–º –∞—Å-—Å–∞–ª—èÃÅ–º –≤–∞-—Ä–∞—Ö–º–∞—Ç—É-–õ–ª–∞ÃÅ—Ö–∏ –≤–∞-–±–∞—Ä–∞–∫–∞ÃÅ—Ç—É—Ö üëã':
        await message.answer(
            "–í—ã–±–µ—Ä–∏ –î—É–∞",
            reply_markup=all_dua
        )
    elif message.text == '–î—É–∞ –ø—Ä–∏ –í—Ö–æ–¥–µ üè†':
        file = open('ALL_DUA/Entrance_home.pdf', 'rb')
        await message.answer_document(file)
        await message.answer(
            text_file.entrance_home,
            parse_mode='HTML'
        )
    elif message.text == '–î—É–∞ –ø–µ—Ä–µ–¥ –ï–¥–æ–π üçΩÔ∏è':
        file = open('ALL_DUA/Before_Eating.pdf', 'rb')
        await message.answer_document(file)
        await message.answer(
            text_file.before_eating,
            parse_mode='HTML'
        )
    elif message.text == '–î—É–∞ –ø–æ—Å–ª–µ –ï–¥—ã ü•£':
        file = open('ALL_DUA/After_Eating.pdf', 'rb')
        await message.answer_document(file)
        await message.answer(
            text_file.after_eating,
            parse_mode='HTML'
        )
    elif message.text == '–î—É–∞ –ø—Ä–∏ –í—ã—Ö–æ–¥–µ –∏–∑ üè†':
        file = open('ALL_DUA/Exit_home.pdf', 'rb')
        await message.answer_document(file)
        await message.answer(
            text_file.exit_home,
            parse_mode='HTML'
        )
    elif message.text in summa:
        await message.answer("–ü–æ–∫–∞ –≤ –†–∞–∑—Ä–∞–±–æ—Ç–∫–µ!", reply_markup=all_dua)
    else:
        await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –î—É–∞", reply_markup=all_dua)